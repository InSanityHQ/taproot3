% Created 2022-08-28 Sun 02:01
% Intended LaTeX compiler: xelatex
\documentclass[letterpaper]{article}
\usepackage{graphicx}
\usepackage{grffile}
\usepackage{longtable}
\usepackage{wrapfig}
\usepackage{rotating}
\usepackage[normalem]{ulem}
\usepackage{amsmath}
\usepackage{textcomp}
\usepackage{amssymb}
\usepackage{capt-of}
\usepackage{hyperref}
\setlength{\parindent}{0pt}
\usepackage[margin=1in]{geometry}
\usepackage{fontspec}
\usepackage{svg}
\usepackage{tikz}
\usepackage{cancel}
\usepackage{pgfplots}
\usepackage{indentfirst}
\setmainfont[ItalicFont = LiberationSans-Italic, BoldFont = LiberationSans-Bold, BoldItalicFont = LiberationSans-BoldItalic]{LiberationSans}
\newfontfamily\NHLight[ItalicFont = LiberationSansNarrow-Italic, BoldFont       = LiberationSansNarrow-Bold, BoldItalicFont = LiberationSansNarrow-BoldItalic]{LiberationSansNarrow}
\newcommand\textrmlf[1]{{\NHLight#1}}
\newcommand\textitlf[1]{{\NHLight\itshape#1}}
\let\textbflf\textrm
\newcommand\textulf[1]{{\NHLight\bfseries#1}}
\newcommand\textuitlf[1]{{\NHLight\bfseries\itshape#1}}
\usepackage{fancyhdr}
\usepackage{csquotes}
\pagestyle{fancy}
\usepackage{titlesec}
\usepackage{titling}
\makeatletter
\lhead{\textbf{\@title}}
\makeatother
\rhead{\textrmlf{Compiled} \today}
\lfoot{\theauthor\ \textbullet \ \textbf{2021-2022}}
\cfoot{}
\rfoot{\textrmlf{Page} \thepage}
\renewcommand{\tableofcontents}{}
\titleformat{\section} {\Large} {\textrmlf{\thesection} {|}} {0.3em} {\textbf}
\titleformat{\subsection} {\large} {\textrmlf{\thesubsection} {|}} {0.2em} {\textbf}
\titleformat{\subsubsection} {\large} {\textrmlf{\thesubsubsection} {|}} {0.1em} {\textbf}
\setlength{\parskip}{0.45em}
\renewcommand\maketitle{}
\author{Dylan Wallace}
\date{\today}
\title{Category Theory: Ch1}
\hypersetup{
 pdfauthor={Dylan Wallace},
 pdftitle={Category Theory: Ch1},
 pdfkeywords={},
 pdfsubject={},
 pdfcreator={Emacs 28.0.50 (Org mode 9.4.4)}, 
 pdflang={English}}
\begin{document}

\tableofcontents

Note that I will use semicolon notation rather than composition notation.
That is, \(f;g = g(f(x))\).

\section{Partitions}
\label{sec:orgc2d37a0}
We can divide a set into a set of subsets of the original set, such that their disjoint union is the original set. We call this a \uline{partition} on the original set.
For example, if \(A = \{1, 2, 3, 4\}\), then the set of subsets \(Part_{A} = \{\{1, 2\}, \{3, 4\}}\) is a partition on \(A\).
We can think of a partition as a surjective map from the original set to another set, such that elements with the same image are in the same set in the partition.
That is, formally, a partition "is" a surjective map \(f: A \twoheadrightarrow X\), where the partition is given by \(Part_{f} = \{\{f(b)|b\in A, f(a) = f(b)\}|a\in A\}\).

\section{Preorders}
\label{sec:org85dc36c}
A preorder (also sometimes called a poset) is a set with a relation, notated in tuple notation as \((P, \leq)\). The relation helps "order" the set. For example, there's an implicit order to numbers, so \(\mathbb{N}\) can be thought of as a preorder.
By the way, in this context, a relation is a function of the form \(\leq: a\times b \rightarrow Bool\).
Note that you can make a partition from a preorder. If two elements are equivalent, i.e. \(a \leq b\) and \(b \leq a\), then you can place them in the same partition.
An \uline{upper set} of a preorder is the set of elements in the preorder that are greater than or equal to a certain element.
The \uline{cartesian product} of a preorder is what you would expect the cartesian product would be. The relation is defined based on component-wise relations.

\subsection{Monotone maps}
\label{sec:org6ffed87}
A monotone map is a mapping between two preorders that preserves structure.
If you have two preorders \(A\) and \(B\) and two monotone maps \(f: A\rightarrow B\) and \(g: B\rightarrow A\) such that \(f;g = id_{A}\) and \(g;f = id_{B}\), then \(A\) and \(B\) are said to be \uline{isomorphic}.

\subsection{Meets}
\label{sec:org4df54d4}
A \uline{meet} of a subset of a preorder \(a\subset A\) is the greatest element of \(A\) such that it is less than any element in \(a\).
Similarly, the \uline{join} of a subset of a preorder \(a\subset A\) is the smallest element of \(A\) such that it is greater than any element in \(a\).
Note that we can form a preorder on the set of all sets, where we define one set to be greater than another set if it is a superset of that set.
Then, we can say that the meet of a set containing two sets is the intersection of those sets, and the join of a set containing two sets is the union of those sets.
This is because a set containing two sets can be thought of as a subset of the set of all sets. Then, we know that the smallest set that is greater than two sets is their union, and the greatest set that is smaller than two sets to be their intersection.
Because of this, we notate meets with the symbol \(\wedge\) and joins with the symbol \(\vee\).
A monotone map preserves meets/joins if the map of a meet/join is the same as the meet/join of two maps. That is, \(f: P\rightarrow Q\) preserves meets if \(f(a\wedge b) = f(a)\wedge f(b)\) and preserves joins if \(f(a\vee b) = f(a)\vee f(b)\).
If a monotone map doesn't preserve joins, it's said to have a "generative effect".

\subsection{Galois connections}
\label{sec:org6dbaa56}
A Galois connection is a superset of preorder isomorphisms (i.e. it's a generalization). Notably, it is a pair of monotone maps \(f: P\rightarrow Q\) and \(g: Q\rightarrow P\) such that \(f(p) \leq q\, \text{iff}\, p \leq g(q)\).
In this case, \(f\) is called the \uline{left adjoint} and \(g\) is called the \uline{right adjoint}.
We know that \(f\) and \(g\) where \(f\) is left adjoint to \(g\) form a Galois connection, if and only if for all \(p, q\), \(p \leq g(f(p))\) and \(f(g(q)) \leq q\).
A map is a right adjoint iff it preserve meets, and is a left adjoint iff it preserves joins. That is, \(g(\wedge A) \cong \wedge g(A)\) and \(f(\vee A) \cong \vee f(A)\).

\subsubsection{Clojure}
\label{sec:orgc7e2969}
If \(f\) is left-adjoint to \(g\), then the operator \(g;f\) has a special property, given by \(p \leq f;g(p)\) and \(f;g;f;g(p) \cong f;g(p)\). That is, the image of \(g;f\) will always be mapped to itself.
You can go from clojures to adjunctions and adjunctions to clojures. The adjunction to clojure is natural as we've shown above, but the clojure to adjunction is given by the clojure and the inclusion induced by the clojure.
You can use clojures to do cool things because of their property. For example, simplifying an equation is a clojure operation because a simplified equation can only be simplified to itself.
\end{document}
