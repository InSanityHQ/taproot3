:PROPERTIES:
:ID:       4785F457-AE69-40C3-9D34-EDBF876A6578
:END:
#+TITLE: Chapter 2A Reading Notes
#+AUTHOR: Huxley Marvit
#+COURSE: 
#+SOURCE: 


#flo #hw

--------------

* Finite-Dimensional Vector Spaces
  :PROPERTIES:
  :CUSTOM_ID: finite-dimensional-vector-spaces
  :END:
#+begin_example
  title: Review
  F denotes R or C
  V denotes a [[file:KBe20math530refVectorSpace.org][KBe20math530refVectorSpace]] over F 
#+end_example

- lin alg does not focus on arbitrary vector spaces
- it focuses on finite-dimensional vector spaces!

#+begin_example
  title: learning objectives for the chapter
  - span //covered in section
  - linear independence //covered in section
  - bases 
  - dimension
#+end_example

- *notation*:

  - lists of vectors:

    - (2,1,4),(3,2,5)

      - list len 2 of vectors in R^3

    - n-tuples without surrounding parens

- /linear combination/

  - a linear combination of /x/ and /y/ would be any expression of the
    form /ax/ + /by/, where /a/ and /b/ are constants ~wiki
  - multiply each element in a list of vectors by an element in F
  - and then add them up!
  - any relation between the element scalar and what's being multiplied?
    can the scalars repeat? #question

    - yes, yes they can.

- /span/

  - the set of all linear combos of a list of vectors

    - denoted: span(v1,...,vm)

  - span of empty list is {0}
  - aka. linear span

- [[file:KBxSpansLinAlg.org][KBxSpansLinAlg]]

#+begin_example
  the span of a list of vectors in V is the smallest subspace of V containing all the vectors in the list

  ```ad-question
  but don't you get out a single vector at the end..? because you add them? #question no! because it's the *set* of all linear combos
#+end_example

- *finite-dimensional vector space

  - a vector space is called finite-dimensional if some list of vectors
    in it spaces the space

    - spans the space..?
    - ????

- linear independence

  - a list of vecors in V where the only choise of a1 ... am in F that
    makes a1v1 + ... + amvm = 0 is a1 = ... = am = 0
  - uniqe way to get 0?

- lineary dependant

  - opposite, can get to 0 with non-zero scalars

- [[file:KBxLinearIndependence.org][KBxLinearIndependence]]

#review the end here #todo some exercises
